git commit 改用emacs 编辑器：
git config --global core.editor "emacs -nw"

===================================================
在git目录下加.gitignore将会对该目录及所有下级目录应用该规则；下级目录可以加.gitignore覆盖该规则
然而在加.gitignore之前已经被git追踪的文件，还将继续被追踪
解决办法：
先移除所有正追踪文件：
git rm -r --cached . 
再按照新的.gitignore规则追踪所有文件：
git add .
最后commit
git commit -sm "Remove ignored files"

===================================================
gitlab: 本地repo直接push到gitlab(创建新repo)
git push --set-upstream https://gitlab.com/byhoo/ece568_prj1.git master

==================================================
查看所有 remote repo:
git remote -v

更改一个已有remote:
git remote set-url <existing remote-name> <remote-url>

添加一个remote:
git remote add <set remote's name; typically origin> <remote-url>

===================================================
git pull = git fetch, then git merge

git fetch 之后 亦可以：

git diff <remote-name>/<remote-branch> <local-branch> 
查看远程分支与本地分支的代码差别

或：
git cherry <remote-name>/<remote-branch> <local-branch>
查看远程分支与本地分支的commit差别

===================================================
更改remote branch:
Using git v1.8.0 or later:
git branch branch_name --set-upstream-to your_new_remote/branch_name

Or you can use the -u switch:
git branch branch_name -u your_new_remote/branch_name

Using git v1.7.12 or earlier:
git branch --set-upstream branch_name your_new_remote/branch_name
=======================================================================


